````

lynnmuthoni: @ GENERATNERATE A LIST OF INPUTS AND OUTPUTS AND THE API ENDPOINTS IN THE PROJECT

GitHub Copilot: Hereâ€™s a summary of the **API endpoints**, their **inputs**, and **outputs** based on your project structure and code:

---

## 1. Patients

### Endpoints
- **GET /patients/**  
  List all patients  
  **Input:** Query params (optional: search)  
  **Output:** List of patient objects

- **POST /patients/**  
  Create a new patient  
  **Input:** Patient data (JSON)  
  **Output:** Created patient object

- **GET /patients/{id}/**  
  Retrieve a patient by ID  
  **Input:** URL param (id)  
  **Output:** Patient object

- **PUT/PATCH /patients/{id}/**  
  Update a patient  
  **Input:** URL param (id), patient data (JSON)  
  **Output:** Updated patient object

- **DELETE /patients/{id}/**  
  Delete a patient  
  **Input:** URL param (id)  
  **Output:** Success message/status

---

## 2. Screening Records

### Endpoints
- **GET /screenings/**  
  List all screening records  
  **Input:** Query params (optional: patient_id, risk_level, start_date, end_date)  
  **Output:** List of screening record objects

- **POST /screenings/**  
  Create a new screening record  
  **Input:** Screening record data (JSON)  
  **Output:** Created screening record object

- **GET /screenings/{id}/**  
  Retrieve a screening record by ID  
  **Input:** URL param (id)  
  **Output:** Screening record object

- **PUT/PATCH /screenings/{id}/**  
  Update a screening record  
  **Input:** URL param (id), screening record data (JSON)  
  **Output:** Updated screening record object

- **DELETE /screenings/{id}/**  
  Delete a screening record  
  **Input:** URL param (id)  
  **Output:** Success message/status

---

## 3. Screening Follow-Ups

### Endpoints
- **GET /followups/**  
  List all follow-ups  
  **Input:** Query params (optional)  
  **Output:** List of follow-up objects

- **POST /followups/**  
  Create a new follow-up  
  **Input:** Follow-up data (JSON)  
  **Output:** Created follow-up object

---

## 4. Risk Prediction

### Endpoint
- **POST /predict-risk/**  
  Predict risk using AI  
  **Input:**  
  ```json
  {
    "age": int,
    "age_at_first_intercourse": int,
    "number_of_sexual_partners": int,
    "parity": int,
    "hiv_status": "POSITIVE"|"NEGATIVE"|"UNKNOWN",
    "hpv_vaccination_status": "VACCINATED"|"NOT_VACCINATED"|"UNKNOWN",
    "contraceptive_use": "NONE"|"ORAL_PILLS"|"INJECTION"|"IUD"|"BARRIER"|"OTHER",
    "smoking_status": "NEVER"|"FORMER"|"CURRENT",
    "family_history_cervical_cancer": bool,
    "previous_abnormal_pap": bool,
    "via_result": "NEGATIVE"|"POSITIVE"|"SUSPICIOUS" (optional),
    "bethesda_category": "NILM"|"ASCUS"|"LSIL"|"HSIL"|"AGC"|"CANCER" (optional)
  }
  ```
  **Output:**  
  ```json
  {
    "risk_score": float,
    "risk_level": str,
    "confidence": float,
    "recommended_action": str,
    "follow_up_months": int,
    "referral_needed": bool,
    "explanation": [str, ...]
  }
  ```

---

## 5. (Admin Only) Risk Factor Weights

### Endpoints
- **GET /admin/screening/riskfactorweight/**  
  List, add, edit, or delete risk factor weights via Django admin

---

### **Summary Table**

| Endpoint                  | Methods         | Input Type      | Output Type         |
|---------------------------|-----------------|-----------------|---------------------|
| /patients/                | GET, POST       | JSON/Query      | Patient(s)          |
| /patients/{id}/           | GET, PUT, PATCH, DELETE | JSON/URL      | Patient            |
| /screenings/              | GET, POST       | JSON/Query      | ScreeningRecord(s)  |
| /screenings/{id}/         | GET, PUT, PATCH, DELETE | JSON/URL      | ScreeningRecord     |
| /followups/               | GET, POST       | JSON/Query      | FollowUp(s)         |
| /predict-risk/            | POST            | JSON            | Risk Prediction     |

---

Let me know if you need the exact JSON schema for any endpoint!

lynnmuthoni: GEENRATE LIST  INPUTS AND EXPECTED  OUTPUTS FOR ALL THE API ENDPOINTS

GitHub Copilot: Here is a structured list of **API endpoints** in your project, with their **inputs** and **expected outputs**:

---

## 1. Accounts API

### POST `/accounts/register/`
- **Input:**  
  User registration data (JSON):  
  `{ "email": str, "username": str, "password": str, "user_type": str, ... }`
- **Output:**  
  User object or registration status (JSON)

---

### POST `/accounts/login/`
- **Input:**  
  `{ "email": str, "password": str }`
- **Output:**  
  Auth token or login status (JSON)

---

### POST `/accounts/logout/`
- **Input:**  
  Auth token (header)
- **Output:**  
  Logout status (JSON)

---

### GET `/accounts/profile/`
- **Input:**  
  Auth token (header)
- **Output:**  
  User profile object (JSON)

---

### PUT/PATCH `/accounts/profile/update/`
- **Input:**  
  Profile update data (JSON)
- **Output:**  
  Updated profile object (JSON)

---

### POST `/accounts/password/change/`
- **Input:**  
  `{ "old_password": str, "new_password": str }`
- **Output:**  
  Status message (JSON)

---

### GET `/accounts/specialists/`
- **Input:**  
  (Optional query params)
- **Output:**  
  List of specialist user objects (JSON)

---

### GET `/accounts/stats/`
- **Input:**  
  None
- **Output:**  
  User statistics (JSON)

---

## 2. Screening API

### GET `/screening/patients/`
- **Input:**  
  (Optional query params: search)
- **Output:**  
  List of patient objects (JSON)

---

### POST `/screening/patients/`
- **Input:**  
  Patient data (JSON)
- **Output:**  
  Created patient object (JSON)

---

### GET `/screening/patients/<int:pk>/`
- **Input:**  
  URL param: pk
- **Output:**  
  Patient object (JSON)

---

### PUT/PATCH `/screening/patients/<int:pk>/`
- **Input:**  
  Patient update data (JSON)
- **Output:**  
  Updated patient object (JSON)

---

### DELETE `/screening/patients/<int:pk>/`
- **Input:**  
  URL param: pk
- **Output:**  
  Status message (JSON)

---

### GET `/screening/screenings/`
- **Input:**  
  (Optional query params)
- **Output:**  
  List of screening record objects (JSON)

---

### POST `/screening/screenings/`
- **Input:**  
  Screening record data (JSON)
- **Output:**  
  Created screening record object (JSON)

---

### GET `/screening/screenings/<int:pk>/`
- **Input:**  
  URL param: pk
- **Output:**  
  Screening record object (JSON)

---

### PUT/PATCH `/screening/screenings/<int:pk>/`
- **Input:**  
  Screening record update data (JSON)
- **Output:**  
  Updated screening record object (JSON)

---

### DELETE `/screening/screenings/<int:pk>/`
- **Input:**  
  URL param: pk
- **Output:**  
  Status message (JSON)

---

### GET `/screening/followups/`
- **Input:**  
  (Optional query params)
- **Output:**  
  List of follow-up objects (JSON)

---

### POST `/screening/followups/`
- **Input:**  
  Follow-up data (JSON)
- **Output:**  
  Created follow-up object (JSON)

---

### POST `/screening/predict-risk/`
- **Input:**  
  Risk prediction input (JSON):  
  ```json
  {
    "age": int,
    "age_at_first_intercourse": int,
    "number_of_sexual_partners": int,
    "parity": int,
    "hiv_status": "POSITIVE"|"NEGATIVE"|"UNKNOWN",
    "hpv_vaccination_status": "VACCINATED"|"NOT_VACCINATED"|"UNKNOWN",
    "contraceptive_use": "NONE"|"ORAL_PILLS"|"INJECTION"|"IUD"|"BARRIER"|"OTHER",
    "smoking_status": "NEVER"|"FORMER"|"CURRENT",
    "family_history_cervical_cancer": bool,
    "previous_abnormal_pap": bool,
    "via_result": "NEGATIVE"|"POSITIVE"|"SUSPICIOUS" (optional),
    "bethesda_category": "NILM"|"ASCUS"|"LSIL"|"HSIL"|"AGC"|"CANCER" (optional)
  }
  ```
- **Output:**  
  Risk prediction result (JSON):  
  ```json
  {
    "risk_score": float,
    "risk_level": str,
    "confidence": float,
    "recommended_action": str,
    "follow_up_months": int,
    "referral_needed": bool,
    "explanation": [str, ...]
  }
  ```

---

## 3. Appointments API

### GET appointments
- **Input:**  
  (Optional query params)
- **Output:**  
  List of appointment objects (JSON)

---

### POST `/appointments/create/`
- **Input:**  
  Appointment data (JSON)
- **Output:**  
  Created appointment object (JSON)

---

### GET `/appointments/<uuid:pk>/`
- **Input:**  
  URL param: pk
- **Output:**  
  Appointment object (JSON)

---

### POST `/appointments/<uuid:pk>/update-status/`
- **Input:**  
  `{ "status": str }`
- **Output:**  
  Updated appointment object or status (JSON)

---

### GET `/clients/`
- **Input:**  
  (Optional query params)
- **Output:**  
  List of client objects (JSON)

---

### POST `/clients/create/`
- **Input:**  
  Client data (JSON)
- **Output:**  
  Created client object (JSON)

---

### GET `/clients/<int:pk>/`
- **Input:**  
  URL param: pk
- **Output:**  
  Client object (JSON)

---

## 4. Analytics API

### GET analytics
- **Input:**  
  (Optional query params)
- **Output:**  
  Analytics dashboard data (JSON)

---

### GET `/analytics/revenue/`
- **Input:**  
  (Optional query params)
- **Output:**  
  Revenue analysis data (JSON)

---

### GET `/analytics/staff/`
- **Input:**  
  (Optional query params)
- **Output:**  
  Staff performance data (JSON)

---

### GET `/analytics/clients/`
- **Input:**  
  (Optional query params)
- **Output:**  
  Client analysis data (JSON)

---

### GET `/analytics/feedback/`
- **Input:**  
  (Optional query params)
- **Output:**  
  Feedback analysis data (JSON)

---

### GET `/analytics/export/`
- **Input:**  
  (Optional query params)
- **Output:**  
  Exported report file or data (JSON or file)

---

**Let me know if you want the exact input/output fields for any specific endpoint!**